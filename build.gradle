buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'com.matthewprenger.cursegradle'
//apply plugin: 'maven-publish'
//
//apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/secrets.gradle'
//apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/patreon.gradle'
//apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'
//apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/minecraft/artifacts.gradle'
//apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/minecraft/maven.gradle'

//loadSecrets()

version = "${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_name}-${version_minecraft}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}


//repositories {
//
////    maven {
////        url 'https://jitpack.io'
////    }
//
//    maven {
//        url 'https://maven.mcmoddev.com'
//    }
//
//    maven {
//        url 'http://dvs1.progwml6.com/files/maven'
//    }
//
//    maven {
//        url 'http://maven.blamejared.com'
//    }
//}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    compile fileTree(include: ['*.jar'], dir: 'src/libs')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
//    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        // expand 'version':project.version , 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

String getBuildNumber() {
    return System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : System.getenv('TRAVIS_BUILD_NUMBER') ? System.getenv('TRAVIS_BUILD_NUMBER') : '0';
}

//Shuts up javadoc failures
//if (JavaVersion.current().isJava8Compatible()) {
//
//    allprojects {
//
//        tasks.withType(Javadoc) {
//
//            options.addStringOption('Xdoclint:none', '-quiet')
//        }
//    }
//}

jar {
    manifest {
        attributes "Main-Class": "de.zekro.fdrpc.ForgeDiscordRPC"
    }

    from {
        configurations.compile
                .filter { f -> !f.name.contains("Dummy") }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jar.finalizedBy('reobfJar')